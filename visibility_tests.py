import visibility, import_file, triangle_mesh
import vtk

# TESTS TO CHECK WHETHER JOIN_TRIANGLES WORKS CORRECTLY

def test_join(triangles):
    polygon = visibility.join_triangles(triangles)

    #print points triangles

    colors = [[0 for j in range(3)] for k in range(len(triangles)+1)]
    vertices = [0 for k in range(len(triangles)+1)]
    for k in range(len(triangles)):
        colors[k][0] = 255.0
        colors[k][1] = 255.0
        colors[k][2] = 255.0
        vertices[k] = triangles[k][0:3]

    #print points polygon

    colors[len(triangles)][0] = 255.0
    colors[len(triangles)][1] = 0.0
    colors[len(triangles)][2] = 0.0
    vertices[len(triangles)] = polygon

    # create a rendering window and renderer
    ren = vtk.vtkRenderer()
    renWin = vtk.vtkRenderWindow()
    renWin.AddRenderer(ren)

    # create a renderwindowinteractor
    iren = vtk.vtkRenderWindowInteractor()
    iren.SetRenderWindow(renWin)

    # create points
    points = vtk.vtkPoints()
    triangles = vtk.vtkCellArray()

    # setup colors (setting the name to "Colors" is nice but not necessary)
    Colors = vtk.vtkUnsignedCharArray()
    Colors.SetNumberOfComponents(3)
    Colors.SetName("Colors")

    index = 0

    for i in range(len(vertices)):
        print(vertices[i])
        if len(vertices[i]) == 3:
            points.InsertNextPoint(vertices[i][0])
            points.InsertNextPoint(vertices[i][1])
            points.InsertNextPoint(vertices[i][2])

            triangle = vtk.vtkTriangle()
            triangle.GetPointIds().SetId(0, index)
            triangle.GetPointIds().SetId(1, index + 1)
            triangle.GetPointIds().SetId(2, index + 2)
            triangles.InsertNextCell(triangle)
            Colors.InsertNextTuple3(colors[i][0], colors[i][1], colors[i][2])
            index += 3
        else:
            for point in vertices[i]:
                points.InsertNextPoint(point)
                Colors.InsertNextTuple3(colors[i][0], colors[i][1], colors[i][2])

            polygon = vtk.vtkPolygon()
            polygon.GetPointIds().SetNumberOfIds(len(polygon))  # make a quad
            for i in range(len(polygon)):
                polygon.GetPointIds().SetId(i, i)

    # Add the polygon to a list of polygons
    polygons = vtk.vtkCellArray()
    polygons.InsertNextCell(polygon)

    # Create a PolyData
    polygonPolyData = vtk.vtkPolyData()
    polygonPolyData.SetPoints(points)
    polygonPolyData.SetPolys(polygons)

    # polydata object
    trianglePolyData = vtk.vtkPolyData()
    trianglePolyData.SetPoints(points)
    trianglePolyData.SetPolys(triangles)

    trianglePolyData.GetCellData().SetScalars(Colors)
    trianglePolyData.Modified()
    if vtk.VTK_MAJOR_VERSION <= 5:
        trianglePolyData.Update()

    writer = vtk.vtkXMLPolyDataWriter()
    writer.SetFileName("TriangleSolidColor.vtp")
    if vtk.VTK_MAJOR_VERSION <= 5:
        writer.SetInput(trianglePolyData)

    else:
        writer.SetInputData(trianglePolyData)
    writer.Write()

    # mapper
    mapper = vtk.vtkPolyDataMapper()
    if vtk.VTK_MAJOR_VERSION <= 5:
        mapper.SetInput(trianglePolyData)
        mapper.SetInput(polygonPolyData)
    else:
        mapper.SetInputData(trianglePolyData)
    mapper.SetInputData(polygonPolyData)

    # actor
    actor = vtk.vtkActor()
    actor.SetMapper(mapper)
    actor.GetProperty().LightingOff()

    # assign actor to the renderer
    ren.AddActor(actor)

    # enable user interface interactor
    iren.Initialize()
    renWin.Render()
    iren.Start()

test_join([[[1.25, 2.5, -0.9375], [0.9375, 2.5, -1.25], [0.9375, 2.5, -0.9375], [0.0, 1.0, 0.0]], [[0.0, 2.5, -0.9375], [-0.3125, 2.5, -1.25], [-0.3125, 2.5, -0.9375], [0.0, 1.0, 0.0]], [[0.0, 2.5, 0.3125], [-0.3125, 2.5, 0.0], [-0.3125, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[1.25, 2.5, 0.3125], [0.9375, 2.5, 0.0], [0.9375, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[0.625, 2.5, 0.3125], [0.3125, 2.5, 0.0], [0.3125, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[0.625, 2.5, 0.9375], [0.3125, 2.5, 0.625], [0.3125, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[1.25, 2.5, 0.9375], [0.9375, 2.5, 0.625], [0.9375, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[-0.625, 2.5, 0.3125], [-0.9375, 2.5, 0.0], [-0.9375, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[-0.625, 2.5, 0.9375], [-0.9375, 2.5, 0.625], [-0.9375, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[0.0, 2.5, 0.9375], [-0.3125, 2.5, 0.625], [-0.3125, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[-0.625, 2.5, -0.9375], [-0.9375, 2.5, -1.25], [-0.9375, 2.5, -0.9375], [0.0, 1.0, 0.0]], [[-0.625, 2.5, -0.3125], [-0.9375, 2.5, -0.625], [-0.9375, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[0.0, 2.5, -0.3125], [-0.3125, 2.5, -0.625], [-0.3125, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[0.625, 2.5, -0.9375], [0.3125, 2.5, -1.25], [0.3125, 2.5, -0.9375], [0.0, 1.0, 0.0]], [[0.625, 2.5, -0.3125], [0.3125, 2.5, -0.625], [0.3125, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[1.25, 2.5, -0.3125], [0.9375, 2.5, -0.625], [0.9375, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[0.9375, 2.5, -0.3125], [0.625, 2.5, -0.625], [0.625, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[0.9375, 2.5, 0.0], [0.625, 2.5, -0.3125], [0.625, 2.5, 0.0], [0.0, 1.0, 0.0]], [[1.25, 2.5, 0.0], [0.9375, 2.5, -0.3125], [0.9375, 2.5, 0.0], [0.0, 1.0, 0.0]], [[0.3125, 2.5, -0.3125], [0.0, 2.5, -0.625], [0.0, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[0.3125, 2.5, 0.0], [0.0, 2.5, -0.3125], [0.0, 2.5, 0.0], [0.0, 1.0, 0.0]], [[0.625, 2.5, 0.0], [0.3125, 2.5, -0.3125], [0.3125, 2.5, 0.0], [0.0, 1.0, 0.0]], [[0.3125, 2.5, -0.9375], [0.0, 2.5, -1.25], [0.0, 2.5, -0.9375], [0.0, 1.0, 0.0]], [[0.3125, 2.5, -0.625], [0.0, 2.5, -0.9375], [0.0, 2.5, -0.625], [0.0, 1.0, 0.0]], [[0.625, 2.5, -0.625], [0.3125, 2.5, -0.9375], [0.3125, 2.5, -0.625], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, -0.3125], [-0.625, 2.5, -0.625], [-0.625, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, 0.0], [-0.625, 2.5, -0.3125], [-0.625, 2.5, 0.0], [0.0, 1.0, 0.0]], [[0.0, 2.5, 0.0], [-0.3125, 2.5, -0.3125], [-0.3125, 2.5, 0.0], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, -0.3125], [-1.25, 2.5, -0.625], [-1.25, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, 0.0], [-1.25, 2.5, -0.3125], [-1.25, 2.5, 0.0], [0.0, 1.0, 0.0]], [[-0.625, 2.5, 0.0], [-0.9375, 2.5, -0.3125], [-0.9375, 2.5, 0.0], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, -0.9375], [-1.25, 2.5, -1.25], [-1.25, 2.5, -0.9375], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, -0.625], [-1.25, 2.5, -0.9375], [-1.25, 2.5, -0.625], [0.0, 1.0, 0.0]], [[-0.625, 2.5, -0.625], [-0.9375, 2.5, -0.9375], [-0.9375, 2.5, -0.625], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, 0.9375], [-0.625, 2.5, 0.625], [-0.625, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, 1.25], [-0.625, 2.5, 0.9375], [-0.625, 2.5, 1.25], [0.0, 1.0, 0.0]], [[0.0, 2.5, 1.25], [-0.3125, 2.5, 0.9375], [-0.3125, 2.5, 1.25], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, 0.9375], [-1.25, 2.5, 0.625], [-1.25, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, 1.25], [-1.25, 2.5, 0.9375], [-1.25, 2.5, 1.25], [0.0, 1.0, 0.0]], [[-0.625, 2.5, 1.25], [-0.9375, 2.5, 0.9375], [-0.9375, 2.5, 1.25], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, 0.3125], [-1.25, 2.5, 0.0], [-1.25, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, 0.625], [-1.25, 2.5, 0.3125], [-1.25, 2.5, 0.625], [0.0, 1.0, 0.0]], [[-0.625, 2.5, 0.625], [-0.9375, 2.5, 0.3125], [-0.9375, 2.5, 0.625], [0.0, 1.0, 0.0]], [[0.9375, 2.5, 0.9375], [0.625, 2.5, 0.625], [0.625, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[0.9375, 2.5, 1.25], [0.625, 2.5, 0.9375], [0.625, 2.5, 1.25], [0.0, 1.0, 0.0]], [[1.25, 2.5, 1.25], [0.9375, 2.5, 0.9375], [0.9375, 2.5, 1.25], [0.0, 1.0, 0.0]], [[0.3125, 2.5, 0.9375], [0.0, 2.5, 0.625], [0.0, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[0.3125, 2.5, 1.25], [0.0, 2.5, 0.9375], [0.0, 2.5, 1.25], [0.0, 1.0, 0.0]], [[0.625, 2.5, 1.25], [0.3125, 2.5, 0.9375], [0.3125, 2.5, 1.25], [0.0, 1.0, 0.0]], [[0.3125, 2.5, 0.3125], [0.0, 2.5, 0.0], [0.0, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[0.3125, 2.5, 0.625], [0.0, 2.5, 0.3125], [0.0, 2.5, 0.625], [0.0, 1.0, 0.0]], [[0.625, 2.5, 0.625], [0.3125, 2.5, 0.3125], [0.3125, 2.5, 0.625], [0.0, 1.0, 0.0]], [[0.9375, 2.5, 0.3125], [0.625, 2.5, 0.0], [0.625, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[0.9375, 2.5, 0.625], [0.625, 2.5, 0.3125], [0.625, 2.5, 0.625], [0.0, 1.0, 0.0]], [[1.25, 2.5, 0.625], [0.9375, 2.5, 0.3125], [0.9375, 2.5, 0.625], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, 0.3125], [-0.625, 2.5, 0.0], [-0.625, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, 0.625], [-0.625, 2.5, 0.3125], [-0.625, 2.5, 0.625], [0.0, 1.0, 0.0]], [[0.0, 2.5, 0.625], [-0.3125, 2.5, 0.3125], [-0.3125, 2.5, 0.625], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, -0.9375], [-0.625, 2.5, -1.25], [-0.625, 2.5, -0.9375], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, -0.625], [-0.625, 2.5, -0.9375], [-0.625, 2.5, -0.625], [0.0, 1.0, 0.0]], [[0.0, 2.5, -0.625], [-0.3125, 2.5, -0.9375], [-0.3125, 2.5, -0.625], [0.0, 1.0, 0.0]], [[0.9375, 2.5, -0.9375], [0.625, 2.5, -1.25], [0.625, 2.5, -0.9375], [0.0, 1.0, 0.0]], [[0.9375, 2.5, -0.625], [0.625, 2.5, -0.9375], [0.625, 2.5, -0.625], [0.0, 1.0, 0.0]], [[1.25, 2.5, -0.625], [0.9375, 2.5, -0.9375], [0.9375, 2.5, -0.625], [0.0, 1.0, 0.0]], [[1.25, 2.5, -0.9375], [1.25, 2.5, -1.25], [0.9375, 2.5, -1.25], [0.0, 1.0, 0.0]], [[0.0, 2.5, -0.9375], [0.0, 2.5, -1.25], [-0.3125, 2.5, -1.25], [0.0, 1.0, 0.0]], [[0.0, 2.5, 0.3125], [0.0, 2.5, 0.0], [-0.3125, 2.5, 0.0], [0.0, 1.0, 0.0]], [[1.25, 2.5, 0.3125], [1.25, 2.5, 0.0], [0.9375, 2.5, 0.0], [0.0, 1.0, 0.0]], [[0.625, 2.5, 0.3125], [0.625, 2.5, 0.0], [0.3125, 2.5, 0.0], [0.0, 1.0, 0.0]], [[0.625, 2.5, 0.9375], [0.625, 2.5, 0.625], [0.3125, 2.5, 0.625], [0.0, 1.0, 0.0]], [[1.25, 2.5, 0.9375], [1.25, 2.5, 0.625], [0.9375, 2.5, 0.625], [0.0, 1.0, 0.0]], [[-0.625, 2.5, 0.3125], [-0.625, 2.5, 0.0], [-0.9375, 2.5, 0.0], [0.0, 1.0, 0.0]], [[-0.625, 2.5, 0.9375], [-0.625, 2.5, 0.625], [-0.9375, 2.5, 0.625], [0.0, 1.0, 0.0]], [[0.0, 2.5, 0.9375], [0.0, 2.5, 0.625], [-0.3125, 2.5, 0.625], [0.0, 1.0, 0.0]], [[-0.625, 2.5, -0.9375], [-0.625, 2.5, -1.25], [-0.9375, 2.5, -1.25], [0.0, 1.0, 0.0]], [[-0.625, 2.5, -0.3125], [-0.625, 2.5, -0.625], [-0.9375, 2.5, -0.625], [0.0, 1.0, 0.0]], [[0.0, 2.5, -0.3125], [0.0, 2.5, -0.625], [-0.3125, 2.5, -0.625], [0.0, 1.0, 0.0]], [[0.625, 2.5, -0.9375], [0.625, 2.5, -1.25], [0.3125, 2.5, -1.25], [0.0, 1.0, 0.0]], [[0.625, 2.5, -0.3125], [0.625, 2.5, -0.625], [0.3125, 2.5, -0.625], [0.0, 1.0, 0.0]], [[1.25, 2.5, -0.3125], [1.25, 2.5, -0.625], [0.9375, 2.5, -0.625], [0.0, 1.0, 0.0]], [[0.9375, 2.5, -0.3125], [0.9375, 2.5, -0.625], [0.625, 2.5, -0.625], [0.0, 1.0, 0.0]], [[0.9375, 2.5, 0.0], [0.9375, 2.5, -0.3125], [0.625, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[1.25, 2.5, 0.0], [1.25, 2.5, -0.3125], [0.9375, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[0.3125, 2.5, -0.3125], [0.3125, 2.5, -0.625], [0.0, 2.5, -0.625], [0.0, 1.0, 0.0]], [[0.3125, 2.5, 0.0], [0.3125, 2.5, -0.3125], [0.0, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[0.625, 2.5, 0.0], [0.625, 2.5, -0.3125], [0.3125, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[0.3125, 2.5, -0.9375], [0.3125, 2.5, -1.25], [0.0, 2.5, -1.25], [0.0, 1.0, 0.0]], [[0.3125, 2.5, -0.625], [0.3125, 2.5, -0.9375], [0.0, 2.5, -0.9375], [0.0, 1.0, 0.0]], [[0.625, 2.5, -0.625], [0.625, 2.5, -0.9375], [0.3125, 2.5, -0.9375], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, -0.3125], [-0.3125, 2.5, -0.625], [-0.625, 2.5, -0.625], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, 0.0], [-0.3125, 2.5, -0.3125], [-0.625, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[0.0, 2.5, 0.0], [0.0, 2.5, -0.3125], [-0.3125, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, -0.3125], [-0.9375, 2.5, -0.625], [-1.25, 2.5, -0.625], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, 0.0], [-0.9375, 2.5, -0.3125], [-1.25, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[-0.625, 2.5, 0.0], [-0.625, 2.5, -0.3125], [-0.9375, 2.5, -0.3125], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, -0.9375], [-0.9375, 2.5, -1.25], [-1.25, 2.5, -1.25], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, -0.625], [-0.9375, 2.5, -0.9375], [-1.25, 2.5, -0.9375], [0.0, 1.0, 0.0]], [[-0.625, 2.5, -0.625], [-0.625, 2.5, -0.9375], [-0.9375, 2.5, -0.9375], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, 0.9375], [-0.3125, 2.5, 0.625], [-0.625, 2.5, 0.625], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, 1.25], [-0.3125, 2.5, 0.9375], [-0.625, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[0.0, 2.5, 1.25], [0.0, 2.5, 0.9375], [-0.3125, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, 0.9375], [-0.9375, 2.5, 0.625], [-1.25, 2.5, 0.625], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, 1.25], [-0.9375, 2.5, 0.9375], [-1.25, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[-0.625, 2.5, 1.25], [-0.625, 2.5, 0.9375], [-0.9375, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, 0.3125], [-0.9375, 2.5, 0.0], [-1.25, 2.5, 0.0], [0.0, 1.0, 0.0]], [[-0.9375, 2.5, 0.625], [-0.9375, 2.5, 0.3125], [-1.25, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[-0.625, 2.5, 0.625], [-0.625, 2.5, 0.3125], [-0.9375, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[0.9375, 2.5, 0.9375], [0.9375, 2.5, 0.625], [0.625, 2.5, 0.625], [0.0, 1.0, 0.0]], [[0.9375, 2.5, 1.25], [0.9375, 2.5, 0.9375], [0.625, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[1.25, 2.5, 1.25], [1.25, 2.5, 0.9375], [0.9375, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[0.3125, 2.5, 0.9375], [0.3125, 2.5, 0.625], [0.0, 2.5, 0.625], [0.0, 1.0, 0.0]], [[0.3125, 2.5, 1.25], [0.3125, 2.5, 0.9375], [0.0, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[0.625, 2.5, 1.25], [0.625, 2.5, 0.9375], [0.3125, 2.5, 0.9375], [0.0, 1.0, 0.0]], [[0.3125, 2.5, 0.3125], [0.3125, 2.5, 0.0], [0.0, 2.5, 0.0], [0.0, 1.0, 0.0]], [[0.3125, 2.5, 0.625], [0.3125, 2.5, 0.3125], [0.0, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[0.625, 2.5, 0.625], [0.625, 2.5, 0.3125], [0.3125, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[0.9375, 2.5, 0.3125], [0.9375, 2.5, 0.0], [0.625, 2.5, 0.0], [0.0, 1.0, 0.0]], [[0.9375, 2.5, 0.625], [0.9375, 2.5, 0.3125], [0.625, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[1.25, 2.5, 0.625], [1.25, 2.5, 0.3125], [0.9375, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, 0.3125], [-0.3125, 2.5, 0.0], [-0.625, 2.5, 0.0], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, 0.625], [-0.3125, 2.5, 0.3125], [-0.625, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[0.0, 2.5, 0.625], [0.0, 2.5, 0.3125], [-0.3125, 2.5, 0.3125], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, -0.9375], [-0.3125, 2.5, -1.25], [-0.625, 2.5, -1.25], [0.0, 1.0, 0.0]], [[-0.3125, 2.5, -0.625], [-0.3125, 2.5, -0.9375], [-0.625, 2.5, -0.9375], [0.0, 1.0, 0.0]], [[0.0, 2.5, -0.625], [0.0, 2.5, -0.9375], [-0.3125, 2.5, -0.9375], [0.0, 1.0, 0.0]], [[0.9375, 2.5, -0.9375], [0.9375, 2.5, -1.25], [0.625, 2.5, -1.25], [0.0, 1.0, 0.0]], [[0.9375, 2.5, -0.625], [0.9375, 2.5, -0.9375], [0.625, 2.5, -0.9375], [0.0, 1.0, 0.0]], [[1.25, 2.5, -0.625], [1.25, 2.5, -0.9375], [0.9375, 2.5, -0.9375], [0.0, 1.0, 0.0]]])